#cloud-config
write-files:
  - path: /root/c2f.sh
    permissions: '0755'
    content: |
      #!/bin/bash
      FILE="$1"
      CURL_ARGS="-X GET"
      BASE_URL="http://useless.mass.goathorde.org:8500/v1/kv"
      URL_PREFIX=""
      OUT_DIR=$(dirname $FILE)
      echo "out dir: $OUT_DIR"
      [[ ! -d $OUT_DIR ]] && mkdir -p $OUT_DIR
      echo "url: $BASE_URL$URL_PREFIX$FILE?raw"
      curl $CURL_ARGS $BASE_URL$URL_PREFIX$FILE?raw -o $FILE
      [[ $? -eq 0 ]] && echo -e "\nsuccess" || echo -e "\nerror"
hostname: ${node_name}
coreos:
  etcd2:
    name: ${node_name}
    initial-cluster-token: abcdefg
    listen-client-urls: http://0.0.0.0:2379
    advertise-client-urls: http://${node_ip}:2379
    listen-peer-urls: http://${node_ip}:2380
    initial-advertise-peer-urls: http://${node_ip}:2380
    initial-cluster: ${cluster_list}
    initial-cluster-state: new
  flannel:
    public_ip: ${node_ip}
    etcd_endpoints: ${etcd_endpoints}
  fleet:
    metadata: "role=node"
  units:
    - name: systemd-timesyncd.service
      command: start
    - name: etcd2.service
      command: start
    - name: fleet.service
      command: start
    - name: flanneld.service
      command: start
    - name: docker.service
      command: start
    - name: setup-network-environment.service
      command: start
      content: |
        [Unit]
        Description=Setup Network Environment
        Documentation=https://github.com/kelseyhightower/setup-network-environment
        Requires=network-online.target
        After=network-online.target

        [Service]
        ExecStartPre=-/usr/bin/mkdir -p /opt/bin
        ExecStartPre=-/usr/bin/curl -L -o /opt/bin/setup-network-environment -z /opt/bin/setup-network-environment https://github.com/kelseyhightower/setup-network-environment/releases/download/1.0.1/setup-network-environment
        ExecStartPre=/usr/bin/chmod +x /opt/bin/setup-network-environment
        ExecStart=/opt/bin/setup-network-environment
        RemainAfterExit=yes
        Type=oneshot
    - name: kube-proxy.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes Proxy
        Documentation=https://github.com/kubernetes/kubernetes
        Requires=setup-network-environment.service
        After=setup-network-environment.service

        [Service]
        ExecStartPre=-/usr/bin/curl -L -o /opt/bin/kube-proxy -z /opt/bin/kube-proxy https://storage.googleapis.com/kubernetes-release/release/v1.2.2/bin/linux/amd64/kube-proxy
        ExecStartPre=/usr/bin/chmod +x /opt/bin/kube-proxy
        # wait for kubernetes master to be up and ready
        ExecStartPre=/opt/bin/wupiao ${master_ip} 8080
        ExecStart=/opt/bin/kube-proxy \
        --master=${master_ip}:8080 \
        --logtostderr=true
        Restart=always
        RestartSec=10
    - name: kube-kubelet.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes Kubelet
        Documentation=https://github.com/kubernetes/kubernetes
        Requires=setup-network-environment.service
        After=setup-network-environment.service

        [Service]
        EnvironmentFile=/etc/network-environment
        ExecStartPre=-/usr/bin/curl -L -o /opt/bin/kubelet -z /opt/bin/kubelet https://storage.googleapis.com/kubernetes-release/release/v1.2.2/bin/linux/amd64/kubelet
        ExecStartPre=/usr/bin/chmod +x /opt/bin/kubelet
        # wait for kubernetes master to be up and ready
        ExecStartPre=/opt/bin/wupiao ${master_ip} 8080
        ExecStart=/opt/bin/kubelet \
        --address=0.0.0.0 \
        --port=10250 \
        --hostname-override=${node_name} \
        --api-servers=${master_ip}:8080 \
        --allow-privileged=true \
        --logtostderr=true \
        --cadvisor-port=4194 \
        --healthz-bind-address=0.0.0.0 \
        --healthz-port=10248 \
        --cloud-config="/etc/cloud.cfg" \
        --cloud-provider="openstack" \
        --cluster-dns=10.100.0.2 \
        --cluster-domain=cluster.local
        Restart=always
        RestartSec=10
  update:
    group: stable
    reboot-strategy: off
